@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model List<HotelNamo.Models.SpaBooking>
@{
    ViewData["Title"] = "Manage Spa Bookings";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Spa Bookings Management</h1>

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">All Spa Bookings</h6>
            <div class="dropdown no-arrow">
                <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
                   data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                </a>
                <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                     aria-labelledby="dropdownMenuLink">
                    <div class="dropdown-header">Booking Actions:</div>
                    <a class="dropdown-item" href="#" id="exportCsv">Export to CSV</a>
                    <a class="dropdown-item" href="#" id="printBookings">Print List</a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item" href="#" id="refreshList">Refresh List</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Customer Name</th>
                            <th>Contact</th>
                            <th>Treatment</th>
                            <th>Date & Time</th>
                            <th>Guests</th>
                            <th>Status</th>
                            <th>Booked On</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var booking in Model)
                        {
                            <tr>
                                <td>@booking.Id</td>
                                <td>@booking.FullName</td>
                                <td>
                                    Email: @booking.Email<br>
                                    Phone: @booking.Phone
                                </td>
                                <td>@booking.Treatment</td>
                                <td>
                                    @booking.PreferredDate.ToString("MMM dd, yyyy")<br>
                                    @booking.PreferredTime
                                </td>
                                <td>@booking.NumberOfGuests</td>
                                <td>
                                    <span class="badge badge-success">@booking.Status</span>
                                </td>
                                <td>@booking.BookingDate.ToString("MMM dd, yyyy HH:mm")</td>
                                <td>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-info view-booking" data-id="@booking.Id">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-warning edit-booking" data-id="@booking.Id">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-danger delete-booking" data-id="@booking.Id">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Booking Details Modal -->
<div class="modal fade" id="bookingDetailsModal" tabindex="-1" role="dialog" aria-labelledby="bookingDetailsModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingDetailsModalLabel">Booking Details</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Booking details will be loaded here via AJAX -->
                <div id="bookingDetails">
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                        <p class="mt-3">Loading booking details...</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            $('#dataTable').DataTable();

            // View booking details
            $('.view-booking').on('click', function () {
                var bookingId = $(this).data('id');

                // In a real application, you would use AJAX to fetch booking details
                // For now, we'll just show a simple alert
                alert('Viewing booking #' + bookingId + ' details');

                // In a real application, you would load details like this:
                /*
                $('#bookingDetails').html('<div class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="sr-only">Loading...</span></div><p class="mt-3">Loading booking details...</p></div>');

                $.ajax({
                    url: '/Admin/GetSpaBookingDetails',
                    type: 'GET',
                    data: { id: bookingId },
                    success: function (response) {
                        $('#bookingDetails').html(response);
                        $('#bookingDetailsModal').modal('show');
                    },
                    error: function (error) {
                        $('#bookingDetails').html('<div class="alert alert-danger">Error loading booking details.</div>');
                    }
                });
                */
            });

            // Edit booking
            $('.edit-booking').on('click', function () {
                var bookingId = $(this).data('id');
                // Redirect to edit page or show edit modal
                alert('Edit booking #' + bookingId);
            });

            // Delete booking
            $('.delete-booking').on('click', function () {
                var bookingId = $(this).data('id');
                if (confirm('Are you sure you want to delete booking #' + bookingId + '?')) {
                    // In a real application, you would use AJAX to delete the booking
                    alert('Booking #' + bookingId + ' deleted successfully');
                }
            });

            // Export to CSV
            $('#exportCsv').on('click', function(e) {
                e.preventDefault();
                alert('Exporting spa bookings to CSV...');
                // In a real application, you would implement CSV export
            });

            // Print list
            $('#printBookings').on('click', function(e) {
                e.preventDefault();
                window.print();
            });

            // Refresh list
            $('#refreshList').on('click', function(e) {
                e.preventDefault();
                location.reload();
            });
        });
    </script>
}
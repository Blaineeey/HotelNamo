@model TableReservation
@{
    ViewData["Title"] = "Modify Reservation";
    Layout = "_UserLayout";
}

<link rel="stylesheet" href="~/css/home-style.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<style>
    .modify-section {
        font-family: 'Raleway', sans-serif;
        padding: 60px 0;
        background-color: #f8f9fa;
    }

    .modify-header {
        text-align: center;
        margin-bottom: 40px;
    }

    .section-title {
        font-size: 18px;
        color: #b29674;
        letter-spacing: 2px;
        text-transform: uppercase;
        margin-bottom: 10px;
    }

    .main-title {
        font-family: 'Playfair Display', serif;
        font-size: 42px;
        font-weight: bold;
        color: #333;
        margin-bottom: 15px;
    }

    .modify-subtitle {
        font-size: 18px;
        color: #666;
        max-width: 700px;
        margin: 0 auto;
    }

    .modify-form {
        background-color: white;
        border-radius: 15px;
        padding: 40px;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        margin-bottom: 30px;
    }

    .form-title {
        font-family: 'Playfair Display', serif;
        font-size: 24px;
        margin-bottom: 25px;
        color: #333;
        font-weight: 600;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .form-label {
        font-weight: 600;
        margin-bottom: 8px;
        color: #555;
        display: block;
    }

    .form-control {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 12px 15px;
        width: 100%;
        font-size: 16px;
        transition: all 0.3s;
    }

        .form-control:focus {
            border-color: #b29674;
            box-shadow: 0 0 0 0.2rem rgba(178, 150, 116, 0.25);
        }

    .dining-hall {
        width: 100%;
        padding: 30px;
        background-color: #f8f8f8;
        border-radius: 10px;
        margin-bottom: 30px;
        position: relative;
    }

    .stage-area {
        height: 80px;
        background-color: #d4c5b1;
        border-radius: 8px;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 50px;
        position: relative;
    }

    .stage-label {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-family: 'Playfair Display', serif;
        color: white;
        font-size: 18px;
        text-transform: uppercase;
        letter-spacing: 1px;
        z-index: 1;
    }

    .stage-area::before {
        content: "";
        position: absolute;
        width: 100%;
        height: 100%;
        background: radial-gradient(ellipse at center, rgba(255,255,255,0.3) 0%, rgba(255,255,255,0) 70%);
    }

    .tables-container {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: 20px;
        margin-bottom: 30px;
    }

    .table {
        width: 100%;
        aspect-ratio: 1;
        border-radius: 50%;
        background-color: white;
        border: 2px solid #ddd;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        position: relative;
        transition: all 0.3s ease;
        font-size: 14px;
        font-weight: 600;
    }

        .table:hover {
            background-color: #f1e7db;
        }

        .table.selected {
            background-color: #b29674;
            color: white;
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(178, 150, 116, 0.4);
        }

        .table.unavailable {
            background-color: #f8f8f8;
            color: #aaa;
            cursor: not-allowed;
            border-color: #ddd;
        }

    .table-number {
        font-weight: bold;
    }

    .table.window {
        background-color: #e6f7ff;
        border-color: #a6d8ff;
    }

        .table.window.selected {
            background-color: #b29674;
            border-color: #b29674;
        }

        .table.window.unavailable {
            background-color: #f8f8f8;
            border-color: #ddd;
        }

    .kitchen-area {
        position: absolute;
        top: 40px;
        right: 30px;
        width: 140px;
        height: 80px;
        background-color: #f1f1f1;
        border: 2px solid #ddd;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 8px;
        font-weight: 600;
        color: #555;
    }

    .feature-box {
        padding: 10px;
        background-color: white;
        border-radius: 5px;
        margin-bottom: 10px;
        box-shadow: 0 3px 6px rgba(0,0,0,0.05);
    }

    .feature-label {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-right: 20px;
    }

    .feature-indicator {
        width: 20px;
        height: 20px;
        border-radius: 50%;
    }

    .feature-window .feature-indicator {
        background-color: #e6f7ff;
        border: 1px solid #a6d8ff;
    }

    .feature-selected .feature-indicator {
        background-color: #b29674;
        border: 1px solid #b29674;
    }

    .feature-unavailable .feature-indicator {
        background-color: #f8f8f8;
        border: 1px solid #ddd;
    }

    .form-actions {
        display: flex;
        gap: 15px;
        margin-top: 30px;
    }

    .btn-save {
        background-color: #b29674;
        color: white;
        padding: 14px 30px;
        font-size: 16px;
        border-radius: 50px;
        border: none;
        flex: 1;
        text-transform: uppercase;
        letter-spacing: 1px;
        box-shadow: 0 5px 15px rgba(178, 150, 116, 0.3);
        transition: all 0.3s ease;
    }

        .btn-save:hover {
            background-color: #a38563;
            color: white;
            box-shadow: 0 8px 20px rgba(178, 150, 116, 0.4);
            transform: translateY(-2px);
        }

    .btn-cancel {
        background-color: transparent;
        color: #666;
        padding: 14px 30px;
        font-size: 16px;
        border-radius: 50px;
        border: 2px solid #ddd;
        flex: 1;
        text-transform: uppercase;
        letter-spacing: 1px;
        transition: all 0.3s ease;
    }

        .btn-cancel:hover {
            background-color: #f5f5f5;
        }

    .venue-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 10px;
        margin-bottom: 20px;
    }

    .validation-summary-errors ul {
        list-style: none;
        padding: 0;
        margin: 0 0 20px 0;
        color: #dc3545;
        background-color: rgba(220, 53, 69, 0.1);
        padding: 15px;
        border-radius: 8px;
    }

    .field-validation-error {
        color: #dc3545;
        font-size: 14px;
        margin-top: 5px;
        display: block;
    }

    .current-table-info {
        background-color: #f9f5f0;
        border-radius: 12px;
        padding: 15px;
        margin-bottom: 25px;
        display: flex;
        align-items: center;
    }

    .current-table-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: #b29674;
        color: white;
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: bold;
        font-size: 18px;
        margin-right: 15px;
    }

    .current-table-details {
        flex: 1;
    }

    .current-table-title {
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }

    .current-table-subtitle {
        font-size: 14px;
        color: #666;
    }

    .venue-info {
        background-color: #f9f5f0;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 30px;
        display: flex;
        align-items: center;
        gap: 20px;
    }

    .venue-icon {
        font-size: 36px;
        color: #b29674;
    }

    .venue-details {
        flex: 1;
    }

    .venue-name {
        font-family: 'Playfair Display', serif;
        font-size: 20px;
        font-weight: 600;
        margin-bottom: 5px;
    }

    .venue-description {
        font-size: 14px;
        color: #666;
    }

    /* Responsive styles */
    @@ media (max-width: 768px) {
        .modify-section

    {
        padding: 40px 0;
    }

    .main-title {
        font-size: 32px;
    }

    .modify-form {
        padding: 25px;
    }

    .tables-container {
        grid-template-columns: repeat(3, 1fr);
    }

    .kitchen-area {
        position: relative;
        top: auto;
        right: auto;
        width: 100%;
        margin-bottom: 20px;
    }

    .form-actions {
        flex-direction: column;
    }

    .btn-save, .btn-cancel {
        width: 100%;
    }

    }

    @@ media (max-width: 576px) {
        .tables-container

    {
        grid-template-columns: repeat(2, 1fr);
    }

    }
</style>

<div class="modify-section">
    <div class="container">
        <div class="modify-header">
            <h3 class="section-title">Reservation Management</h3>
            <h1 class="main-title">Modify Reservation</h1>
            <p class="modify-subtitle">Update your reservation details or select a different table.</p>
        </div>

        <div class="row justify-content-center">
            <div class="col-lg-8">
                <form asp-action="ModifyConfirmed" asp-route-id="@Model.Id" method="post" id="modifyForm">
                    <input type="hidden" asp-for="Id" />
                    <input type="hidden" asp-for="UserId" />
                    <input type="hidden" asp-for="Status" />
                    <input type="hidden" asp-for="BookingDate" />
                    <!-- Fixed venue since we only have The Grand Restaurant -->
                    <input type="hidden" asp-for="Venue" value="The Grand Restaurant" />

                    <div class="modify-form">
                        <h4 class="form-title">Personal Information</h4>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="venue-info">
                            <div class="venue-icon">
                                <i class="fas fa-utensils"></i>
                            </div>
                            <div class="venue-details">
                                <div class="venue-name">The Grand Restaurant</div>
                                <div class="venue-description">Our signature dining venue featuring gourmet cuisine and live music in an elegant atmosphere.</div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="FullName" class="form-label">Full Name</label>
                                    <input asp-for="FullName" class="form-control" />
                                    <span asp-validation-for="FullName" class="field-validation-error"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Email" class="form-label">Email Address</label>
                                    <input asp-for="Email" class="form-control" />
                                    <span asp-validation-for="Email" class="field-validation-error"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Phone" class="form-label">Phone Number</label>
                                    <input asp-for="Phone" class="form-control" />
                                    <span asp-validation-for="Phone" class="field-validation-error"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="NumberOfGuests" class="form-label">Number of Guests</label>
                                    <select asp-for="NumberOfGuests" class="form-control">
                                        @for (int i = 1; i <= 10; i++)
                                        {
                                            <option value="@i">@i @(i == 1 ? "Guest" : "Guests")</option>
                                        }
                                    </select>
                                    <span asp-validation-for="NumberOfGuests" class="field-validation-error"></span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modify-form">
                        <h4 class="form-title">Reservation Details</h4>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="ReservationDate" class="form-label">Reservation Date</label>
                                    <input asp-for="ReservationDate" type="date" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                    <span asp-validation-for="ReservationDate" class="field-validation-error"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="ReservationTime" class="form-label">Reservation Time</label>
                                    <select asp-for="ReservationTime" class="form-control" id="reservationTime">
                                        <option value="17:30">5:30 PM</option>
                                        <option value="18:00">6:00 PM</option>
                                        <option value="18:30">6:30 PM</option>
                                        <option value="19:00">7:00 PM</option>
                                        <option value="19:30">7:30 PM</option>
                                        <option value="20:00">8:00 PM</option>
                                        <option value="20:30">8:30 PM</option>
                                        <option value="21:00">9:00 PM</option>
                                    </select>
                                    <span asp-validation-for="ReservationTime" class="field-validation-error"></span>
                                </div>
                            </div>
                        </div>

                        <div class="current-table-info">
                            <div class="current-table-icon">@Model.TableNumber</div>
                            <div class="current-table-details">
                                <div class="current-table-title">Current Table: Table @Model.TableNumber</div>
                                <div class="current-table-subtitle">To keep your current table, leave the table selection unchanged.</div>
                            </div>
                        </div>
                    </div>

                    <div class="modify-form" id="tableSelectionSection">
                        <h4 class="form-title">Table Selection</h4>

                        <div class="dining-hall">
                            <div class="stage-area">
                                <span class="stage-label">Live Music Stage</span>
                            </div>

                            <div class="kitchen-area">
                                <i class="fas fa-utensils me-2"></i> Kitchen
                            </div>

                            <div class="tables-container">
                                <!-- Tables will be generated dynamically by JavaScript -->
                            </div>

                            <div class="d-flex flex-wrap justify-content-center mb-3">
                                <div class="feature-label">
                                    <span class="feature-indicator"></span>
                                    Regular Table
                                </div>
                                <div class="feature-label feature-window">
                                    <span class="feature-indicator"></span>
                                    Window View
                                </div>
                                <div class="feature-label feature-selected">
                                    <span class="feature-indicator"></span>
                                    Selected
                                </div>
                                <div class="feature-label feature-unavailable">
                                    <span class="feature-indicator"></span>
                                    Unavailable
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <input type="hidden" asp-for="TableNumber" id="selectedTable" />
                            <span asp-validation-for="TableNumber" class="field-validation-error"></span>
                        </div>
                    </div>

                    <div class="modify-form">
                        <h4 class="form-title">Additional Information</h4>

                        <div class="form-group">
                            <label asp-for="Occasion" class="form-label">Occasion</label>
                            <select asp-for="Occasion" class="form-control">
                                <option value="">Select an occasion (optional)</option>
                                <option value="None">None / Regular Dining</option>
                                <option value="Birthday">Birthday</option>
                                <option value="Anniversary">Anniversary</option>
                                <option value="Business">Business Meeting</option>
                                <option value="Date">Date Night</option>
                                <option value="Celebration">Celebration</option>
                            </select>
                            <span asp-validation-for="Occasion" class="field-validation-error"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="DietaryRestrictions" class="form-label">Dietary Restrictions</label>
                            <textarea asp-for="DietaryRestrictions" class="form-control" rows="2"
                                      placeholder="Please inform us of any allergies or dietary restrictions"></textarea>
                            <span asp-validation-for="DietaryRestrictions" class="field-validation-error"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="SpecialRequests" class="form-label">Special Requests</label>
                            <textarea asp-for="SpecialRequests" class="form-control" rows="3"
                                      placeholder="Any special requests or preferences for your dining experience"></textarea>
                            <span asp-validation-for="SpecialRequests" class="field-validation-error"></span>
                        </div>

                        <div class="form-actions">
                            <a asp-action="MyReservations" class="btn btn-cancel">
                                <i class="fas fa-times me-2"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-save">
                                <i class="fas fa-save me-2"></i> Save Changes
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const tablesContainer = document.querySelector('.tables-container');
            const selectedTableInput = document.getElementById('selectedTable');
            const reservationDateInput = document.getElementById('ReservationDate');
            const reservationTimeInput = document.getElementById('reservationTime');

            // Set the initial selected table
            const initialTableNumber = '@Model.TableNumber';
            selectedTableInput.value = initialTableNumber;

            // Define table layout for The Grand Restaurant
            const layout = {
                rows: 4,
                cols: 5,
                windowTables: [4, 9, 14, 19], // Tables by the window
                specialTables: [] // Any other special tables
            };

            // Generate tables
            generateTables();

            // Generate tables based on the layout
            function generateTables() {
                tablesContainer.innerHTML = '';

                const totalTables = layout.rows * layout.cols;

                for (let i = 0; i < totalTables; i++) {
                    const table = document.createElement('div');
                    table.className = 'table';
                    if (layout.windowTables.includes(i)) {
                        table.classList.add('window');
                    }

                    const tableNumber = i + 1;
                    table.dataset.table = tableNumber;

                    table.innerHTML = `<span class="table-number">${tableNumber}</span>`;

                    // Pre-select the current table
                    if (tableNumber.toString() === initialTableNumber) {
                        table.classList.add('selected');
                    }

                    table.addEventListener('click', function() {
                        if (this.classList.contains('unavailable')) {
                            return; // Cannot select unavailable tables
                        }

                        // Deselect all tables
                        document.querySelectorAll('.table.selected').forEach(t => {
                            t.classList.remove('selected');
                        });

                        // Select this table
                        this.classList.add('selected');
                        selectedTableInput.value = this.dataset.table;
                    });

                    tablesContainer.appendChild(table);
                }

                // Check availability after generating tables
                checkAvailability();
            }

            // Check availability of tables
            function checkAvailability() {
                const date = reservationDateInput.value;
                const time = reservationTimeInput.value;
                const venue = "The Grand Restaurant"; // Fixed venue

                if (!date || !time) return;

                // Make all tables available first
                document.querySelectorAll('.table').forEach(table => {
                    if (table.dataset.table !== initialTableNumber) {
                        table.classList.remove('unavailable', 'selected');
                    }
                });

                // Fetch reserved tables from server
                fetch(`/Dining/CheckAvailability?date=${date}&time=${time}&venue=${encodeURIComponent(venue)}`)
                    .then(response => response.json())
                    .then(data => {
                        const reservedTables = data.reservedTables || [];

                        // Mark reserved tables as unavailable
                        reservedTables.forEach(tableNumber => {
                            // Skip the current table (allow keeping the same table)
                            if (tableNumber === initialTableNumber) return;

                            const tableElement = document.querySelector(`.table[data-table="${tableNumber}"]`);
                            if (tableElement) {
                                tableElement.classList.add('unavailable');
                            }
                        });
                    })
                    .catch(error => {
                        console.error('Error checking availability:', error);
                    });
            }

            // Check availability when date or time changes
            reservationDateInput.addEventListener('change', checkAvailability);
            reservationTimeInput.addEventListener('change', checkAvailability);
        });
    </script>
}